# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "uhci_hcd" "ehci_pci" "ahci" "virtio_pci" "virtio_scsi" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/91bfeff1-bffd-465e-981c-14ef65748ffa";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D074-78CC";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    #{ device = "/dev/disk/by-uuid/542dc3f6-b40f-4264-b624-6f25699d9322";
    { device = "/dev/disk/by-uuid/113f020f-b091-4d0d-96fe-93d3570267f8";
      fsType = "ext4";
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/55584c05-d735-41e8-b638-62a9926e9b25";
      fsType = "ext4";
    };

  # fileSystems."/var/lib/containers/storage/volumes" =
  #   { device = "/dev/disk/by-uuid/4a9c20d5-bd92-4ca4-aebb-6ee2736d4ba4";
  #     fsType = "ext4";
  #   };

  # fileSystems."/var/lib/containers/storage/overlay" =
  #   { device = "/dev/disk/by-uuid/b024b62d-7c63-4f30-8006-decb97edc579 ";
  #     fsType = "ext4";
  #   };

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/d2944180-59d7-4f3a-8241-0c892785b316 ";
      fsType = "ext4";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
