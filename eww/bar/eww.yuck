(defvar eww "eww -c $HOME/.config/eww/bar")

(defvar power false)
(defvar player false)
(defvar timebox false)
(defvar onhover_hyprland false)
(defvar onhover_cpu false)
(defvar onhover_bat false)
(defvar onhover_volume false)

(defwidget bar []
  (centerbox
    :orientation "h"
    (left-bar)
    (center-bar)
    (right-bar)
  )
)

(defwidget left-bar []
  (box
    :class "left-bar"
    :halign "start"
    :space-evenly false
    :spacing 2
    (eventbox
      :onhover "${eww} update timebox=true"
      :onhoverlost "${eww} update timebox=false"
      (box
        :class "indicator"
        :space-evenly false
        (revealer
          :transition "slideleft"				
          :reveal timebox
	        :duration "1s"
          (label :text {formattime(EWW_TIME, "%Y-%m-%d")})
        )
        (label :text {formattime(EWW_TIME, "%H:%M")})
      )
    )
    (revealer
      :reveal {mpris?.status != ""}
      (eventbox
        :class "indicator"
        :onhover "${eww} update player=true"
        :onhoverlost "${eww} update player=false"
        (box
          :space-evenly false
          :spacing 2
          (revealer
            :transition "slideleft"				
            :reveal player
	        	:duration "1s"
            (box
              :space-evenly false
              :spacing 2
              (button
                :onclick "playerctl previous"
                ""
              )
              (button
                :onclick "playerctl play-pause"
                { mpris?.status == "Playing" ? "" : "" }
              )
              (button
                :onclick "playerctl next"
                ""
              )
            )
          )
          (label
            :class "player-indicator"
            :text {mpris?.title?:""}
          )
          (revealer
            :transition "slideright"				
            :reveal player
	        	:duration "1s"
            (box
              :space-evenly false
              (label :text {mpris?.artist?:""})
              (scale
                :class "music"
                :min 0
                :max {position?.length?:0}
                :value {position?.position?:0}
                :onchange "playerctl position {}"
              )
            )
          )
        )
      )
    )
  )
)

(defwidget center-bar []
  (box
    :class "center-bar indicator"
    :space-evenly false
    :spacing 2
    :visible {hyprland != {}}
    (indicator
      :class "workspace"
      :onhover "${eww} update onhover_hyprland=true"
      :onhoverlost "${eww} update onhover_hyprland=false"
      :icon {hyprland?.workspace?.name?:""}
      (label :text {hyprland?.class?:""})
      (revealer
        :transition "slideright"				
        :reveal onhover_hyprland
      	:duration "1s"
        (label :text {hyprland?.title?:""})
      )
    )
  )
)

(defwidget right-bar []
  (box
   :class "right-bar"
   :halign "end"
   :space-evenly false
    :spacing 2
    (indicator
      :onhover "${eww} update onhover_volume=true"
      :onhoverlost "${eww} update onhover_volume=false"
      :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
      :icon {sound-mute =~ "yes" ? "󰖁" : "󰕾"}
      :class { sound-mute =~ "no" ? "volume" : "inactive"}
      (revealer
        :class "volume"
        :class { sound-mute =~ "no" ? "volume" : "inactive"}
        :transition "slideright"				
        :reveal onhover_volume
	      :duration "1s"
        (scale
          :min 0
          :max 100
          :value {sound-volume?:0}
          :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
        )
      )
      (label :text "${sound-volume}%")
    )
    (indicator
      :onhover "${eww} update onhover_cpu=true"
      :onhoverlost "${eww} update onhover_cpu=false"
      :tooltip "CPU0 - Usage: ${EWW_CPU.cores[0].usage}% Freq: ${EWW_CPU.cores[0].freq}MHz
CPU1 - Usage: ${EWW_CPU.cores[1].usage}% Freq: ${EWW_CPU.cores[1].freq}MHz
CPU2 - Usage: ${EWW_CPU.cores[2].usage}% Freq: ${EWW_CPU.cores[2].freq}MHz
CPU3 - Usage: ${EWW_CPU.cores[3].usage}% Freq: ${EWW_CPU.cores[3].freq}MHz"
      :class "cpu"
      :icon "󰍛"
      (label :text "${round(EWW_CPU.avg, 0)}%")
      (revealer
        :transition "slideright"				
        :reveal onhover_cpu
	      :duration "1s"
        (label :text "${EWW_TEMPS.CORETEMP_PACKAGE_ID_0?:0}°C")
      )
      (label :text "${round(EWW_RAM.used_mem_perc, 0)}%")
    )
    (indicator
      :onhover "${eww} update onhover_bat=true"
      :onhoverlost "${eww} update onhover_bat=false"
      :class "bat"
      :icon "󱐋"
      (label :text "${round(EWW_BATTERY.total_avg, 0)}%")
      (revealer
        :transition "slideright"				
        :reveal onhover_bat
	      :duration "1s"
        (label :text "${EWW_TEMPS.BAT0_TEMP?:0}°C")
      )
    )
    (eventbox
      :onhover "${eww} update power=true"
      :onhoverlost "${eww} update power=false"
      (box
        :orientation "h"					
				:space-evenly false 	 
				:vexpand false 	
				:class "powermenu"
	      (revealer
          :transition "slideleft"				
	      	:reveal power			 
	      	:duration "550ms"
	        (box
            :orientation "h"					
	        	:space-evenly false
            :spacing 2
            (button
              :class "power"					
	            :tooltip "Reboot"		 
	          	:onclick "reboot"
              "󰜉"
            )
	          (button
              :class "power"					
	          	:tooltip "Log Out" 		 
	          	:onclick "hyprctl dispatch exit"
              "󰍃"
            )
	          (button
              ;:class "button-lock" 				
              :visible false
	          	:tooltip "Lock Screen"	 
	          	;:onclick "betterlockscreen -l"
              ""
            )
          )
        )
	      (button
          :class "power"					
	      	:tooltip "Shutdown"		 
	      	:onclick "shutdown now"
          "⏻"
        )
      )
    )
  )
)

(defwidget indicator [
  icon
  ?tooltip
  ?class
  ?onscroll
  ?onhover
  ?onhoverlost
  ?onclick
  ?onmiddleclick
  ?onrightclick
]
  (eventbox
    :tooltip tooltip
    :onclick onclick
    :onscroll onscroll
    :onhover onhover
    :onhoverlost onhoverlost
    :onclick onclick
    :onmiddleclick onmiddleclick
    :onrightclick onrightclick
    (box
      :class "indicator"
      :orientation "h"					
      :space-evenly false 	 
      (label
        :class "icon ${class}"
        :text icon
      )
      (children)
    )
  )
)

(defpoll hyprland
  :interval "0.2s"
  :initial "{}"
  "hyprctl activewindow -j"
)

(defpoll sound-volume
  :interval "0.15s"
  "pactl get-sink-volume @DEFAULT_SINK@ | grep -Po \"[0-9]+%\" | head -1 | grep -Po \"[0-9]+\""
)

(defpoll sound-mute
  :interval "0.3s"
  "pactl get-sink-mute @DEFAULT_SINK@"
)

(deflisten mpris
  :initial "{\"status\": \"\"}"
  "./scripts/mpris.sh"
)

(deflisten position
  :initial "{}"
  "scripts/position.sh"
)

(defwindow bar
  :monitor 0
  :exclusive true
  :stacking "fg"
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "2%"
    :anchor "top center"
  )
  (bar)
)
